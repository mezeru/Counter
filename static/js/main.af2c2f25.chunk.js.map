{"version":3,"sources":["components/counter.jsx","components/counters.jsx","components/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["handleColour","props","fir","counter","value","handleZero","Counter","Fragment","class","className","style","fontSize","onClick","onIncre","onDecre","disabled","onDelete","id","Counters","onNew","onReset","cList","map","Navbar","color","fontFamily","counterNum","App","state","counters","count","handleIncrement","index","indexOf","setState","handleDelete","counterId","filter","handleAdd","push","handleReset","handleDecrement","handleNum","no","length","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af2c2f25.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Counter(props){\n    \n \n        return ( \n            <React.Fragment>\n                 <div class=\"row\">\n                 <div class=\"col-1\">\n                <span className={handleColour(props)} style={{fontSize: 30}}>{handleZero(props)}</span>\n                </div>\n                <div class=\"col\">\n                <button className=\"m-2 btn btn-secondary btn-lg\" onClick={() => { props.onIncre(props.counter) }} >+</button>\n                <button className=\"m-2 btn btn-lg btn-secondary\" onClick={() => { props.onDecre(props.counter)}} disabled= {props.counter.value === 0 ? \"disabled\":\"\"} >-</button>\n                <button onClick={() => props.onDelete(props.counter.id)} className=\"btn btn-danger m-2\">Delete</button>\n                </div>\n                </div>\n                <br/>\n            </React.Fragment>\n         );\n\n        \n    }\n\n    function handleColour(props){\n        let fir = \"btn m-2 btn-sm btn-\";\n\n        if(props.counter.value === 0){\n            return fir + \"warning\";\n        }\n        return fir+\"primary\";\n    }\n\n    function handleZero(props){ \n        const {value} = props.counter;\n        if (value === 0){\n            return \"Zero\"\n        }\n        return value\n    }\n\n\n \nexport default Counter;","import Counter from './counter.jsx';\n\nfunction Counters(props){\n    \n    \n        return ( <div>             \n                <button onClick={props.onNew} className= \"btn btn-info btn-lg m-3\">Add New +</button>\n                <br />\n                <button onClick={props.onReset} className= \"btn btn-success btn-lg m-5\">Reset</button>\n                <br />\n        {props.cList.map(counter => <Counter key={counter.id} onDecre={props.onDecre} counter={counter} onDelete={props.onDelete} onIncre={props.onIncre} />)}\n                </div>\n         );\n    \n}\n \nexport default Counters;","import React, { Component } from 'react';\n\nfunction Navbar(props){\n        return ( \n            <nav className=\"navbar navbar-light bg-dark \" >\n                 <h2 className=\"p-3\" style={ {color:\"white\",fontFamily: \"Times New Roman\"}}>{props.counterNum}</h2>\n                \n            </nav>\n         );\n    \n}\n \nexport default Navbar;","import Counters from './components/counters.jsx'\nimport React, { Component } from 'react';\nimport Navbar from './components/navbar.jsx'\n\nclass App extends Component {\n  \n  state = { \n    counters:[],\n    count: 1\n }\n\n handleIncrement = (counter) =>{\n     let counters = [...this.state.counters];\n     const index = counters.indexOf(counter);\n     counters[index].value++;\n     this.setState({counters});\n\n     \n };\n\n handleDelete = (counterId) => {\n     const counters = this.state.counters.filter(counter => counter.id !== counterId);\n     this.setState({ counters })\n };\n\n handleAdd = () => {\n    let counters = this.state.counters;\n    counters.push({id:this.state.count,value:0});\n    this.setState({counters});\n    this.state.count += 1;\n };\n\n handleReset = () => {\n     const counters = this.state.counters.map(counter => {counter.value = 0; return counter; } );\n\n     this.setState({counters})\n }\n\n handleDecrement = (counter) =>{\n  let counters = [...this.state.counters];\n  const index = counters.indexOf(counter);\n  counters[index].value--;\n  this.setState({counters});\n }\n\n handleNum = () =>{\n\n     const no = this.state.counters.length;\n     if (no === 0){\n         return \"There are NO Counters\"\n     }\n\n     if (no === 1){\n         return \"There is 1 Counter\"\n     }\n\n     return \"There are \"+ this.state.counters.length +\" Counters\"\n }\n\n\n  render() { \n    return (     \n    <React.Fragment>\n      <Navbar counterNum={this.handleNum()} />\n    <div className = \"container\">\n      <Counters onNew={this.handleAdd} onDecre={this.handleDecrement} onReset={this.handleReset} onIncre={this.handleIncrement} onDelete={this.handleDelete} cList={this.state.counters} />\n      </div>\n    </React.Fragment>\n     );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}